@page "/patients"
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

@using Xaberue.Playground.HospitalManager.WebUI.Client.Services
@using Xaberue.Playground.HospitalManager.WebUI.Shared
@using Xaberue.Playground.HospitalManager.WebUI.Shared.Contracts
@using Xaberue.Playground.HospitalManager.WebUI.Shared.Models

@inject IPatientService PatientsApiService
@inject NavigationManager Navigation


<PageTitle>Patients</PageTitle>

<h1>Patients</h1>

<p>These are all the patients that this hospital gives service...</p>

@if (patients is null)
{
    <FluentProgressRing></FluentProgressRing>
}
else
{
    <FluentDataGrid Id="patientsGrid" Items="@patients.AsQueryable()" GridTemplateColumns="1fr 1fr 1fr 2fr" TGridItem="PatientGridViewModel" Pagination="@pagination">
        <PropertyColumn Title="Id" Property="@(c => c!.Id)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Code" Property="@(c => c!.Code)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Full Name" Property="@(c => c.FullName)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Hiring Date" Property="@(c => c!.DateOfBirth.ToShortDateString())" Sortable="true" Align="Align.End" />
    </FluentDataGrid>

    <FluentPaginator State="@pagination" />
}


@code {

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private IEnumerable<PatientGridViewModel>? patients;


    protected override async Task OnInitializedAsync()
    {
        patients = await PatientsApiService.GetAllGridModelsAsync();
    }

}
